import numpy as np  
import pandas as pd  
import tensorflow as tf  
from sklearn.datasets import load_iris  
from sklearn.model_selection import train_test_split  
from sklearn.preprocessing import OneHotEncoder  
 
iris = load_iris()  
X = iris.data  
y = iris.target.reshape(-1, 1)  

encoder = OneHotEncoder(sparse=False)  
y_onehot = encoder.fit_transform(y)  
 
X_train, X_test, y_train, y_test = train_test_split(X, y_onehot, test_size=0.2, random_state=42)  
 
model = tf.keras.Sequential([  
    tf.keras.layers.Dense(10, activation='relu', input_shape=(X_train.shape[1],)),  
    tf.keras.layers.Dense(10, activation='relu'),  
    tf.keras.layers.Dense(3, activation='softmax')  
])  
 
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])  
 
model.fit(X_train, y_train, epochs=100, batch_size=5, verbose=1)  
 
loss, accuracy = model.evaluate(X_test, y_test)  
print(f"Accuracy of Neural Network: {accuracy * 100:.2f}%")
